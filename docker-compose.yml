version: '3'
networks:
  default:
    driver: bridge

services:
  webserver:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    container_name: orders_webserver
    ports:
      - "8000:80"
    volumes:
      - ./apps/orders/:/var/www/orders
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites/:/etc/nginx/conf.d/
      - ./docker/nginx/ssl/:/etc/ssl/
    extra_hosts:
      - "host.docker.internal:host-gateway" #
  orders:
    container_name: orders_service
    build:
      context: apps/orders
      dockerfile: Dockerfile
    image: digitalocean.com/php
    restart: unless-stopped
    tty: true
    working_dir: /var/www/orders
    env_file:
      - .env
    volumes:
      - ./apps/orders/:/var/www/orders
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    extra_hosts:
      - "host.docker.internal:host-gateway"
  orders_db:
    image: mariadb:10.4.13
    restart: unless-stopped
    tty: true
    container_name: orders_db
    ports:
      - "13306:3306"
    environment:
      MYSQL_DATABASE: orders_db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      SERVICE_NAME: mysql
      SERVICE_TAGS: dev
    volumes:
      - ./docker/mysql/orders_db:/var/lib/mysql
  redis:
    image: redis
    container_name: redis
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ./docker/redis/data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    restart: always


